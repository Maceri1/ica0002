- name: Create Grafana directories
  file:
    path: "/opt/grafana/provisioning/{{ item }}"
    state: directory
  loop:
    - dashboards
    - datasources

- name: Copy main dashboard json
  ansible.builtin.copy:
    src: main.json
    dest: /opt/grafana/provisioning/dashboards/main.json

- name: Copy MySQL dashboard json
  ansible.builtin.copy:
    src: mysql.json
    dest: /opt/grafana/provisioning/dashboards/mysql.json

- name: Copy rsyslog json
  ansible.builtin.copy:
    src: rsyslog.json
    dest: /opt/grafana/provisioning/dashboards/rsyslog.json

- name: Copy backup json
  ansible.builtin.copy:
    src: backups.json
    dest: /opt/grafana/provisioning/dashboards/backup.json

- name: Copy agama_client json
  ansible.builtin.copy:
    src: agama_client.json
    dest: /opt/grafana/provisioning/dashboards/agama_client.json

- name: Move template dashboards
  ansible.builtin.template:
    src: my_dashboards.yaml.j2
    dest: /opt/grafana/provisioning/dashboards/default.yaml

- name: Move template datasources
  ansible.builtin.template:
    src: my_datasources.yaml.j2
    dest: /opt/grafana/provisioning/datasources/default.yaml

- name: Move template grafana
  ansible.builtin.template:
    src: grafana.ini.j2
    dest: /opt/grafana/grafana.ini
  no_log: true

- name: Create a data container
  community.docker.docker_container:
    name: grafana
    image: grafana/grafana
    volumes: /opt/grafana:/etc/grafana
    state: started
    restart_policy: always
    published_ports: "{{ grafana_port }}:3000"
  notify: Restart Grafana container

- name: Assign Cname to Grafana
  include_role:
    name: "cname"
  vars:
    service: "grafana"

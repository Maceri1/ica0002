- name: Install Bind9
  ansible.builtin.apt:
    name: bind9
    state: present

- name: Generate Bind9 config
  ansible.builtin.template:
    src: named.conf.{{ item }}.j2
    dest: /etc/bind/named.conf.{{ item }}
    mode: '0644'
  loop:
    - options
    - local
  notify: 
    - Restart Bind9
    - Restart Bind Exporter
  
- name: Create master zone file
  ansible.builtin.template:
    src: db.{{ domain_name }}.j2
    dest: /var/cache/bind/db.{{ domain_name }}
    mode: '0644'
  when: inventory_hostname in groups['dns_primary']
  notify: Restart Bind9

- name: Reverse template zone
  ansible.builtin.template:
    src: db.rev.j2
    dest: /var/cache/bind/rev.db.{{ domain_name }}
    force: yes
  when: inventory_hostname in groups ['dns_primary']
  notify: Restart Bind9

- name: Ensure Bind9 service is running
  ansible.builtin.service:
    name: bind9
    state: started
    enabled: true

- name: install dependency for nsupdate
  ansible.builtin.apt:
    name: python3-dnspython
    state: present

- name: Add A backup record on primary DNS server
  community.general.nsupdate:
    key_algorithm: hmac-sha256
    key_name: "nsupdate.key"
    key_secret: "{{ nsupdate_key }}"
    record: "backup.{{ domain_name }}"
    server: "{{ hostvars[groups['dns_primary'][0]].ansible_default_ipv4.address }}"
    state: present
    type: A
    zone: "{{ domain_name }}"
    value: "{{ backup_server_ip }}"
  when: inventory_hostname in groups['dns_primary']

- name: Extract Bind9 exporter
  ansible.builtin.unarchive:
    src: https://github.com/prometheus-community/bind_exporter/releases/download/v0.6.1/bind_exporter-0.6.1.linux-amd64.tar.gz
    dest: /opt
    remote_src: yes
    extra_opts: [ "--strip-components=1", "--wildcards", "--no-anchored", "bind_exporter" ]

- name: Create symlink to Bind9 exporter executable
  ansible.builtin.file:
    src: /opt/bind_exporter
    dest: /usr/local/bin/prometheus-bind-exporter
    state: link

- name: Create Bind9 exporter systemd service file
  ansible.builtin.copy:
    dest: /etc/systemd/system/prometheus-bind-exporter.service
    content: |
      [Unit]
      Description=Bind9 Exporter
      Wants=network-online.target
      After=network-online.target

      [Service]
      User=bind
      Group=bind
      Type=simple
      ExecStart=/usr/local/bin/prometheus-bind-exporter

      [Install]
      WantedBy=multi-user.target
  notify: Restart Bind Exporter

- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Ensure Bind9 exporter is started and enabled
  ansible.builtin.systemd:
    name: prometheus-bind-exporter
    state: started
    enabled: true

- name: Assign Cnames to Bind9
  include_role:
    name: "cname"
  vars:
    service: "ns-{{inventory_hostname | replace('Maceri1-','')}}"